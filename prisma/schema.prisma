generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model anime {
  id             Int              @id @default(autoincrement())
  year           String           @db.Text
  type           String           @db.Text
  name           String           @db.Text
  views          Int              @default(0)
  bgmid          String?          @db.Text
  nsfw           Boolean          @default(false)
  title          String?          @db.Text
  deleted        Boolean          @default(false)
  poster         String?          @db.Text
  upload_message upload_message[]
}

model bangumi_data {
  bgmid           Int              @id @unique(map: "bangumi_data_un")
  relations_anime String?          @db.LongText
  subjects        String?          @db.LongText
  characters      String?          @db.LongText
  update_time     DateTime?        @default(now()) @db.Timestamp(0)
  upload_message  upload_message[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model follow {
  user_id   Int
  anime_id  Int
  status    Int
  edit_time DateTime? @default(now()) @db.Timestamp(0)

  @@ignore
}

model invite_code {
  code            String    @unique(map: "invite_code_un") @db.VarChar(100)
  code_user       Int?
  code_creator    Int?
  create_time     DateTime? @default(now()) @db.Timestamp(0)
  use_time        DateTime? @db.Timestamp(0)
  expiration_time DateTime? @db.Timestamp(0)
}

model settings {
  key   String  @unique(map: "settings_un") @db.VarChar(100)
  value String? @db.Text
}

model token {
  token           String   @unique(map: "token") @db.VarChar(256)
  user            Int
  create_time     DateTime @default(now()) @db.Timestamp(0)
  expiration_time DateTime @default(now()) @db.Timestamp(0)
  status          Boolean  @default(true)
}

model user {
  id          Int       @id @default(autoincrement())
  email       String    @db.VarChar(100)
  name        String    @db.VarChar(100)
  password    String    @db.VarChar(255)
  create_time DateTime? @default(now()) @db.Timestamp(0)
  data        String?   @db.VarChar(2048)
  settings    String?   @db.VarChar(2048)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model view_history {
  userID         Int
  animeID        Int
  fileName       String?   @db.VarChar(255)
  episode        String?   @db.VarChar(16)
  currentTime    Int?
  totalTime      Int?
  userIP         String?   @db.VarChar(64)
  watchMethod    String?   @db.VarChar(32)
  lastReportTime DateTime? @default(now()) @db.DateTime(0)
  useDrive       String?   @db.VarChar(64)

  @@unique([userID, animeID, fileName, watchMethod], map: "view_history_un")
  @@index([userID, animeID], map: "view_history_userID_IDX")
  @@ignore
}

model upload_message {
  id                Int           @id @default(autoincrement())
  index             String        @db.Text
  animeID           Int?
  anime             anime?        @relation(fields: [animeID], references: [id])
  bangumiID         Int?
  bangumiData       bangumi_data? @relation(fields: [bangumiID], references: [bgmid])
  fileName          String?       @db.Text
  messageSentStatus Boolean       @default(false)
  uploadTime        DateTime?     @default(now())
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model views {
  id   Int
  ep   String?   @db.Text
  file String?   @db.Text
  ip   String?   @db.Text
  user Int?
  time DateTime? @default(now()) @db.Timestamp(0)
  type String    @db.Text

  @@ignore
}
